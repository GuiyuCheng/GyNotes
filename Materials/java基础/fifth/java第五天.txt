1.反射
  [1]通过反射机制，用户程序员可以知道任意类里面的所有属性和方法(哪怕是私有的)。
     对于任意对象，可以调用任意属性和方法。
  [2]JVM（虚拟机）载入字节码文件。JVM为每一个类，创建一个对象。该对象称为类对象。
  [3]类对象中包含：构造对象，方法对象，字段对象。
		   Constructor
                   Method
                   Field  

  [4]获取类对象的三种方式：1.Class.forName("java.lang.String");
                           2.String.class
                           3.String ss = new String();
                             ss.getClass();
  [5]注意：当用户执行私有成员时，需要添加访问权限。

2.JNI


3.静态注册步骤
  1.创建包含本地方法的类 Hello.java
  2.javac 编译包含本地方法的类
  3.定位到com父目录
    执行命令 javah com.Hello 生成头文件com_Hello.h
  4.创建出一个hello.c文件，实现头文件中的函数
  5.生成共享库
    gcc -fpic -i /jdk/include -i /jdk/include/linux -shared -o libHello.so hello.c
    (注意生成动态链接库时，命名以lib开头，否则系统无法识别)
  6.创建一个测试类Test.java
    导入共享库
    static{
	System.loadLibrary(Hello);
    }
    调用本地方法
    hello.say();
  7. 编译Test.java生成Test.class
     运行测试代码
     java -Djava.library.path=. Test
     (-Djava.library.path=.) 指定当前共享库的位置