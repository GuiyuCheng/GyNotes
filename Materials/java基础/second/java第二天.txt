1.访问权限
  public             可以被所有类访问
  protected          可以被子类访问，可以被同包访问
  缺省不写           可以被同包访问
  private            只能被自己访问，其它类无法访问

2.继承
  概念：扩展父类的功能。子类扩展父类，可以得到父类的属性和方法，避免冗余重复的代码。
        java中使用extends关键字来完成继承
  格式：public 子类 extends 父类{}
  注意：1.在java中只允许单继承（一个子类只能有一个父类，一个父类可以有多个子类）
        2.子类不能访问父类的私有成员

3.关于父类和子类的构造方法
  如果父类有定义带参的构造方法，那么子类必须在构造的第一行调用父类的构造方法。利用super关键字。
  如果父类没有定义构造方法或者定义的是不带参的构造方法，那么子类不需要显示调用父类的构造。

4.方法的重写（覆盖）override
  概念：发生在父类和子类之间。子类重写父类的方法。
  特点：1.方法名一样，参数列表一样，返回值类型一样
        2.覆盖的方法不能使用比父类中被覆盖的方法更严格的访问权限。
        3.覆盖的方法不能比父类中被覆盖方法抛出更多的异常。

5.创建对象时代码执行顺序
  [1]声明对象名（对象的引用）（句柄）
  [2]创建对象。调用构造。
  [3]检查该类有没有父类，如果有父类，检查父类有没有语句块，如果有语句块
  [4]执行父类中的语句块，执行父类中的构造
  [5]执行子类的语句块，执行子类的构造

6.this和super
  this.成员        调用本类的成员变量和成员方法
  this(参数...)    调用本类的构造方法
  super.成员       调用父类的成员变量和成员方法
  super(参数...)   调用父类的构造

7.Object类
  [1]java中所有类的祖先类
  [2]Object中有两个方法
     toString()  打印输出对象名时调用
     finalize()  在垃圾回收器回收当前生成的对象时调用，用来做清理工作，例如关闭流等。

8.GC垃圾回收机制

9.抽象类
  [1]abstract关键字修饰的类，为抽象类     不能创建对象
  [2]abstract关键字修饰方法，为抽象方法   被子类实现
  [3]如果子类继承一个抽象类。要么实现抽象类中的所有抽象方法。要么将子类定义为一个抽象类。
  [4]包含抽象方法的类一定是抽象类。抽象类不一定包含抽象方法。
  
10.final
   [1]final修饰变量，表示常量             常量
   [2]final修饰方法，表示该方法不能被重写 最终方法
   [3]final修饰类，表示该类不能被继承     最终类

11.static
   [1]static修饰变量
   [2]static修饰方法
   [3]static修饰语句块
   [4]static修饰类     ------------几乎不用，先不管---------
   静态内容在字节码文件载入JVM时，被初始化
   静态内容通过类名调用

12.接口
   [1]interface 接口名{
	   静态常量
           抽象方法
      }
   [2]类可以实现(implements)多个接口
   [3]接口之间可以多继承
  